package bigdata;

/**
 * 32位无符号整数的范围是0~4,294,967,295，
 * 现在有一个正好包含40亿个无符号整数的文件，
 * 所以在整个范围中必然存在没出现过的数。
 * 可以使用最多1GB的内存，怎么找到所有未出现过的数？
 * 解法：
 * 使用位图0 ~ (2^32)-1，每个位置就是代表着1个数出现或没出现过，每个位置只占1个比特
 * 这个位置只占用~511MB
 * ==========================================
 * 进阶：
 * 内存限制为 3KB，但是只用找到一个没出现过的数即可
 * 解法：
 * 我们使用一个int[]数组，然后3KB的内存限制允许我们的数组长度为3000/4 = 750
 * 我们向下取一个2的次幂的长度 = 512
 * 用这个长度为512的int[]数组来划分0~4,294,967,295这个范围，大概每一个位置负责8388608个数
 * 数组上每个位置的值来记录它们负责的这个范围出现的次数，取最小的那个位置然后再进行同样的操作
 *  - 因为我们只有40亿个数，所以肯定会有没有出现的数（所以数组上肯定有值是小于8388608，那就代表这个范围里面有数没出现过）
 * 直到我们可以使用3KB的内存来代表范围里面的所有数后，就能够找出哪个数没有出现过
 * ==========================================
 * 进阶：
 * 限制变量数，但是只用找到一个没出现过的数即可
 * 解法：
 * 二分
 *  - mid函数做一个总范围的划分，两个半区分别由一个变量来记录半区范围出现数的词频，看看哪个半区数的数量更少，就用那个半区继续二分
 *  - 最多递归32次
 */
public class Question_02 {
}
