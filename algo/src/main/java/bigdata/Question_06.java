package bigdata;

/**
 * 32位无符号整数的范围是0~4294967295，
 * 有一个10G大小的文件，每一行都装着这种类型的数字，
 * 整个文件是无序的，给你5G的内存空间，
 * 请你输出一个10G大小的文件，就是原文件所有数字排序的结果
 * 解法：
 * 准备一个map和一个MinHeap
 *  - map用来记录当前MinHeap里面的数以及该数在MinHeap里面的位置
 *  - MinHeap就保存当前最大的两个数，以及他们出现的次数
 * 依次遍历每行数字，假设我们来到数i，拿i和我们MinHeap里面的头部对比：
 *  - 首先拿map来判断i是否在我们的MinHeap里面，如果是，就增加i的词频
 *  - 如果i > MinHeap[0]那么i就顶替掉MinHeap[0]，然后heapify，并更新Map
 *  - 如果i < MinHeap[0]那么我们就跳过
 * 当我们遍历完所有的数之后，我们就已经找出最大的两个数，以及他们出现的次数，设置一个变量t=MinHeap[0]，保证之后的遍历不再考虑大于等于t的数
 * ================================================================================================
 * 技巧：
 * 如果我们要找最大的数top100，那就用size=100的MinHeap，每当遇到i比MinHeap[0]要大，那么就替换MinHeap[0]，然后heapify
 * 如果我么要找最小的数top100，那就用size=100的MaxHeap，遇到i比MaxHeap[0]要小，那就替换MaxHeap[0]
 */
public class Question_06 {
}
